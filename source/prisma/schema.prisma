// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  price         Int
  category_id   Int
  category      Category @relation(fields: [category_id], references: [id])
  rating        Int
  reviews_count Int
  created_at    DateTime
  OrderItems    OrderItem[]
  Reviews       Review[]
  CartItems     CartItem[]

}

model Category {
  id    Int     @id @default(autoincrement())
  name  String
  Products Product[]
}

model User {
  id        Int       @id @default(autoincrement())
  user_name String
  password  String
  email     String
  created_at DateTime
  Orders    Order[]
  Reviews   Review[]
  CartItems CartItem[]
}

model Order {
  id          Int       @id @default(autoincrement())
  user_id     Int
  status      String
  total_price Int
  created_at  DateTime
  OrderItems  OrderItem[]
  User        User      @relation(fields: [user_id], references: [id])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order_id  Int
  product_id Int
  quantity  Int
  price     Int
  Order     Order    @relation(fields: [order_id], references: [id])
  Product   Product  @relation(fields: [product_id], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  product_id Int
  user_id    Int
  rating     Int
  comment    String
  created_at DateTime
  Product    Product  @relation(fields: [product_id], references: [id])
  User       User     @relation(fields: [user_id], references: [id])
}

model CartItem {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  quantity   Int
  User       User     @relation(fields: [user_id], references: [id])
  Product    Product  @relation(fields: [product_id], references: [id])
}
